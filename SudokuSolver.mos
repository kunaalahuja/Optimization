model hw5prob2Sudoku !the name of the model
uses "mmxprs"; !gain access to the Xpress-Optimizer solver for solving linear programs

declarations
  Objective : linctr
  num = 1 .. 9 ! number of auxiliary variables. This is a fixed range.
  num1 = 1 .. 3 ! number of auxiliary variables. This is a fixed range.
  num2 = 4 .. 6 ! number of auxiliary variables. This is a fixed range.
  num3 = 7 .. 9 ! number of auxiliary variables. This is a fixed range.
  x :  array(num, num, num) of mpvar !mpvar declares a variable, and Xpress automatically assumes a variable to be nonnegative
end-declarations


x(1,1,8) = 1
x(2,3,3) = 1
x(2,4,6) = 1
x(3,2,7) = 1
x(3,5,9) = 1
x(3,7,2) = 1
x(4,2,5) = 1
x(4,6,7) = 1
x(5,5,4) = 1
x(5,6,5) = 1
x(5,7,7) = 1
x(6,4,1) = 1
x(6,8,3) = 1
x(7,3,1) = 1
x(7,8,6) = 1
x(7,9,8) = 1
x(8,3,8) = 1
x(8,4,5) = 1
x(8,8,1) = 1
x(9,2,9) = 1
x(9,7,4) = 1

! define Objective function
Objective := 1

forall(i in num, j in num, k in num)
    x(i,j,k) is_binary

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

forall(i in num, j in num)
    sum(k in num) x(i,j,k) = 1

forall(j in num, k in num)
    sum(i in num) x(i,j,k) = 1

forall(i in num, k in num)
    sum(j in num) x(i,j,k) = 1

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

forall(k in num)
    sum(i in num1, j in num1) x(i,j,k) = 1

forall(k in num)
    sum(i in num1, j in num2) x(i,j,k) = 1

forall(k in num)
    sum(i in num1, j in num3) x(i,j,k) = 1

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

forall(k in num)
    sum(i in num2, j in num1) x(i,j,k) = 1

forall(k in num)
    sum(i in num2, j in num2) x(i,j,k) = 1

forall(k in num)
    sum(i in num2, j in num3) x(i,j,k) = 1

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

forall(k in num)
    sum(i in num3, j in num1) x(i,j,k) = 1

forall(k in num)
    sum(i in num3, j in num2) x(i,j,k) = 1

forall(k in num)
    sum(i in num3, j in num3) x(i,j,k) = 1

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


! now we are ready to invoke the solver to minimize the objective function
minimize (Objective)

! if your model runs correctly, the following two lines of texts should be printed in Output/Input tab on the right
writeln("Begin running model")
writeln("End running model")
! then the optimal solution of the problem should be printed in Output/Input tab

forall(i in num, j in num, k in num)
	   if( getsol(x(i,j,k)) = 1) then
	        writeln("x(",i,",",j,",",k,")", getsol(x(i,j,k)))
	   end-if
end-model
